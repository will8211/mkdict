#!/usr/bin/env python3

import MySQLdb
import pickle
import random
import xlrd
from romanization import *

# Import dictionary from xls file 

print('Importing xls file...')

mk_dict = xlrd.open_workbook("Mkdictionary.xls")
mk_sheet = mk_dict.sheet_by_index(0)

# Connect to database in SQL

conn = MySQLdb.connect(host="localhost", user='root', passwd='iamafish', 
                       db='mkdictionary', charset='utf8')
cursor = conn.cursor()
SQL = cursor.execute

# (Re)create table 

SQL("DROP TABLE IF EXISTS Dict")
SQL("""
    CREATE TABLE Dict (
    Id          INT          UNSIGNED NOT NULL AUTO_INCREMENT,
    Type        BOOLEAN      NOT NULL,
    Chinese     VARCHAR(256) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
    English     VARCHAR(256) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
    POJ         VARCHAR(256) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
    TRS         VARCHAR(256) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
    DT          VARCHAR(256) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
    POJ_search  VARCHAR(256) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
    TRS_search  VARCHAR(256) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
    DT_search   VARCHAR(256) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
    POJ_numbers VARCHAR(256) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
    TRS_numbers VARCHAR(256) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
    DT_numbers  VARCHAR(256) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
    Code        CHAR(4)      NOT NULL,
    Tai_char    VARCHAR(256) CHARACTER SET utf8 COLLATE utf8_unicode_ci,
    PRIMARY KEY (id))
    """) # ENGINE=MyISAM (at the very end)


SQL("ALTER TABLE Dict AUTO_INCREMENT = 2")

# Populate MySQL database

base64 = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
used_codes = []

with open('combo_wins.pkl', 'rb') as f:
    tai_chars = pickle.load(f)

for i in range(1, mk_sheet.nrows):
    if i % 2000 == 0:
        print('Writing row %d to mySQL table' % i)
    r = mk_sheet.row(i)
    boolean = int(r[1].value.startswith('::'))
    
    #Escape single-quotes
    r[3].value = r[3].value.replace("'", "''")
    #Amend Taiwanese
    r[1].value = r[1].value.replace('::', '')
    r[1].value = r[1].value.replace('::', '')
    r[1].value = r[1].value.replace('9', '2')
    #Chinese punctiation police!
    r[2].value = r[2].value.replace(' ,', '，')
    r[2].value = r[2].value.replace(' (', '（')
    r[2].value = r[2].value.replace(' )', '）')
    r[2].value = r[2].value.replace('!', '！')
    r[2].value = r[2].value.replace('?', '？')
    
    poj, poj_search, poj_numbers = poj_convert(r[1].value)
    trs, trs_search, trs_numbers = trs_convert(r[1].value)
    dt, dt_search, dt_numbers = dt_convert(r[1].value)
    
    looking = True
    while looking:
        code = ''.join(random.choice(base64) for n in range(4))
        if code not in used_codes:
            looking = False
    used_codes.append(code)

    try:
        tai_char = tai_chars[i+1]
    except KeyError:
        tai_char = None

    SQL("""
        INSERT INTO Dict (Type, Chinese, English, POJ, TRS, DT, 
                          POJ_search, TRS_search, DT_search,
                          POJ_numbers, TRS_numbers, DT_numbers, Code, Tai_char)
        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
        """, (boolean, r[2].value, r[3].value, poj, trs, dt, 
              poj_search, trs_search, dt_search, 
              poj_numbers, trs_numbers, dt_numbers, code, tai_char))

# Index for English (FULLTEXT) seach and id

print('Indexing...')
SQL("ALTER TABLE Dict ADD FULLTEXT INDEX `English_fulltext` (`English` ASC)")

# Commit changes and close connection

conn.commit()
cursor.close()
conn.close()
